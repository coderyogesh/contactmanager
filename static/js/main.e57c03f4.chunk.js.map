{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","a","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","Contact_regeneratorRuntime","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invaild","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","AddContact_regeneratorRuntime","preventDefault","abrupt","post","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","EditContact_regeneratorRuntime","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","element","contacts_Contacts","contacts_AddContact","contacts_EditContact","test_Test","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.e57c03f4.chunk.js","sourcesContent":["import React,{ Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                contact.id !== action.payload)\n            };\n            case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload,\n                ...state.contacts]\n            };\n            case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact =>\n                    contact.id === action.payload.id \n                    ? (contact =action.payload)\n                        : contact)\n            };\n            default:\n                return state;\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n    contacts: [  ],\n    dispatch: action => this.setState(state => \n    reducer(state,action))\n    };\n\n   async componentDidMount() {\n    const res = await axios\n        .get('https://jsonplaceholder.typicode.com/users');\n\n        this.setState({contacts:res.data});\n    }\n\n\n   render() {\n    return (\n        <Context.Provider value={this.state}>\n        {this.props.children}\n        </Context.Provider>\n    );\n   }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id,dispatch) => {\n    try{\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({type:'DELETE_CONTACT',payload: id});\n  } catch(e) {\n    dispatch({type:'DELETE_CONTACT',payload: id});\n  }\n};\n  render() {\n    const { id,name,email,phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n       { value => {\n        const { dispatch } = value;\n        return (\n          <div className=\"card card-body mb-3\">\n        <h4>{name}\n        <i  \n        onClick={() =>\n              this.setState({ showContactInfo:\n              !this.state.showContactInfo })\n            }\n            className=\"fas fa-sort-down\"\n            style={{cursor:'pointer'}}\n            />\n            <i className=\"fas fa-times\" style ={{ cursor:'pointer',\n            float:'right',color:'red' }}\n            onClick = {this.onDeleteClick.bind(this,id,dispatch)}\n            />\n\n            <Link to={`contact/edit/${id}`}>\n              <i \n                className=\"fas fa-pencil-alt\"\n                style={{\n                  cursor:'pointer',\n                  float:'right',\n                  color:'black',\n                  marginRight:'1rem'\n                }}\n                />\n            </Link>\n\n            </h4>\n            {showContactInfo ? (<ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n        </ul>) :null }\n      </div>\n        )\n       }}\n      </Consumer>\n\n    );\n  }\n}\n\nContact.propTypes = {\n contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n \nclass Contacts extends Component {\n    render() {\n        return(\n            <Consumer>\n            {value => {\n                const { contacts } =value;\n                return(\n                    <React.Fragment>\n                    <h1 className=\"display-4 mb-2\">\n                    <span className = \"text-danger\">Contact</span>\n                      List\n                    </h1>\n                    {contacts.map (contact=> (\n                        <Contact\n                        key = {contact.id}\n                        contact = {contact}\n                        />\n                ))}\n                </React.Fragment>\n                );\n            }}\n            </Consumer>\n        );\n    }\n}\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n const TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n }) => {\n    return (\n        <div className=\"form-group\">\n                       <label htmlFor={name}>{label}</label>\n                       <input \n                       type={type} \n                       name={name}\n                       className= {classnames('form-control form-control-lg',{'is-invaild':error})}\n                       placeholder={placeholder}\n                       value={value}\n                       onChange={onChange}\n                       />\n                       {error && <div className=\"invalid-feedback\">\n                       {error}</div>}\n                    </div>\n    );\n };\n\n TextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n };\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n \n class AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onSubmit = async (dispatch,e) => {\n        e.preventDefault(); \n\n        const{ name,email,phone} =  this.state;\n\n        //Check For Errors\n        if(name === '') {\n          this.setState({errors: {name:'Name is Required'}});\n          return;\n        }\n\n        if(email === '') {\n          this.setState({errors: {email:'Email is Required'}});\n          return;\n        }\n\n        if(phone === '') {\n          this.setState({errors: {phone:'Phone is Required'}});\n          return;\n        }\n\n        const newContact = {\n          name,\n          email,\n          phone\n        };\n\n        const res = await axios\n        .post('https://jsonplaceholder.typicode.com/users'\n        ,newContact)\n        \n        dispatch({type: 'ADD_CONTACT',payload:\n        res.data })\n\n      //clear State\n      this.setState ({\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n      });  \n    \n};\n\n    onChange = e => this.setState({ [e.target.name]:\n        e.target.value });\n\n  render() { \n    const { name,email,phone,errors } =this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n            <div className=\"card-header\">Add Contact</div>\n            <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                    <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value = {name}\n                    onChange ={this.onChange}\n                    error={errors.name}\n                    />\n                    <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value = {email}\n                    onChange ={this.onChange}\n                    error={errors.email}\n                    />\n                    <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\" \n                    placeholder=\"Enter Phone No.\"\n                    value = {phone}\n                    onChange ={this.onChange}\n                    error={errors.phone}\n                    />\n                   \n                    <input \n                        type=\"submit\" \n                        value=\"Add Contact\" \n                        className=\"btn btn-dark btn-block\" \n                    />\n                </form>\n            </div>\n          </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  // async componentDidMount() {\n  //   const { id } = this.props.match();\n  //   const res = await axios.get(\n  //     `https://jsonplaceholder.typicode.com/users/${id}`\n  //   );\n\n    //const contact = res.data;\n\n    // this.setState({\n    //   name: contact.name,\n    //   email: contact.email,\n    //   phone: contact.phone\n    // });\n//}\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    // const { id } = this.props.match.params;\n\n    // const res = await axios.put(\n    //   `https://jsonplaceholder.typicode.com/users/${id}`,\n    //   updContact\n    // );\n\n    // dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    //this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n    const {branding} = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm\n        navbar-dark bg-danger mb-3 py-0\">\n            <div className='container'>\n              <a href=\"/\" className=\"navbar-brand\">\n                {branding} </a>\n                <div>\n                  <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                      <Link to=\"/\" className=\"nav-link\">\n                      <i className=\"fas fa-home\"></i>\n                      Home\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                    <Link to=\"/contact/add\" className=\"nav-link\">\n                    <i className=\"fas fa-plus\"></i>Add\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                  <Link to=\"/about\" className=\"nav-link\">\n                  <i className=\"fas fa-question\"></i>About\n                  </Link>\n                </li>\n                  </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\n\n\nexport default Header;","import React from 'react'\n\nexport default function About() {\n  return (\n    <div>\n    <h1 className=\"display-4\"> About Manager  </h1>\n    <p className=\"lead\">  Simple app to Manage Contacts</p>\n    <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div><h1 className='display-4'>404 Page Not Found</h1>\n    <p className=\"lead\">Sorry ,That Page does not exist.</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n    state = {\n      title: '',\n      body: ''\n    };\n    \n    componentDidMount () {\n      fetch('https://jsonplaceholder.typicode.com/posts/1')\n        .then(response => response.json())\n        .then(data => this.setState({\n          title: data.title,\n           body: data.body\n        })\n      );\n    }\n\n\n  render() {\n    const {title,body} = this.state;\n    return (\n      <div>\n      <h1>{title}</h1>\n      <p>{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test; ","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\n\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n      <Router>\n      <div className='App'>\n        <Header branding=\"Contact Manager\"/>\n        <div className=\"container\">\n        <Routes>\n          <Route exact path =\"/\" element = \n          {<Contacts/>} />\n          <Route exact path =\"/contact/add\" element = \n          {<AddContact/>} />\n          <Route exact path =\"/contact/edit/:id\" element = \n          {<EditContact/>} />\n          <Route exact path =\"/about\" element = \n          {<About/>} />\n          <Route exact path =\"/test\" element = \n          {<Test/>} />\n          <Route path=\"\" element={NotFound} />\n        </Routes>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}